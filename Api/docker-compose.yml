version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # Anuncia o endereço do broker para a rede Docker
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092           # Define o Kafka para ouvir em todas as interfaces
    depends_on:
      - zookeeper
    networks:
      - kafka_network
    volumes:
      - kafka_data:/var/lib/kafka/data  # Volume para persistência de dados
      - ./data/shared:/data/shared  # Volume compartilhado com o host
  api:
    build:
      context: .             # Diretório onde o Dockerfile da API está localizado
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - KAFKA_BROKER_URL=kafka:9092
      - INFERENCE_REQUEST_TOPIC=inference_request
      - INFERENCE_RESULT_TOPIC=inference_result
      - GROUP_ID=inference_group
    depends_on:
      - kafka
    networks:
      - kafka_network
    volumes:
      - kafka_data:/var/lib/kafka/data  # Volume para persistência de dados
      - ./data/shared:/data/shared  # Volume compartilhado para acesso a arquivos
    restart: always           # Reinicia o serviço caso ele falhe, útil para aguardar o Kafka

networks:
  kafka_network:

volumes:
  kafka_data:
